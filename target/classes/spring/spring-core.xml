<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    
    <context:annotation-config/>
    <context:component-scan base-package="com.mengma.mis"/>
    <context:property-placeholder location="classpath:*.properties" file-encoding="UTF-8" ignore-unresolvable="true"/>
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <!-- StringHttpMessageConverter编码为UTF-8，防止乱码 -->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8"/>
                <property name="supportedMediaTypes">
                    <list>
                        <bean class="org.springframework.http.MediaType">
                            <constructor-arg index="0" value="text"/>
                            <constructor-arg index="1" value="plain"/>
                            <constructor-arg index="2" value="UTF-8"/>
                        </bean>
                        <bean class="org.springframework.http.MediaType">
                            <constructor-arg index="0" value="*"/>
                            <constructor-arg index="1" value="*"/>
                            <constructor-arg index="2" value="UTF-8"/>
                        </bean>
                    </list>
                </property>
            </bean>

            <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
            <bean id="fastJsonHttpMessageConverter"
                  class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
                <property name="features">
                    <list>
                        <array value-type="com.alibaba.fastjson.serializer.SerializerFeature">
                            <value>DisableCircularReferenceDetect</value><!-- 解决json ref 问题 -->
                        </array>
                        <value>WriteMapNullValue</value>  <!-- 输出null值 -->
                        <value>QuoteFieldNames</value><!-- key 使用双引号 -->
                        <value>WriteNullListAsEmpty</value><!-- list为null时转成[] -->
                        <value>WriteNullStringAsEmpty</value><!-- 字符串为null时转成“” -->
                        <value>WriteNullNumberAsZero</value><!-- 数值字段如果为null,输出为0,而非null -->
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>    
    <!-- 设置上传文件的最大尺寸1024字节=1K，这里是50M -->    
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	    <property name="maxUploadSize" value="52428800" />    
	    <property name="defaultEncoding" value="UTF-8"/>    
	</bean>
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <property name="viewClass"  
            value="org.springframework.web.servlet.view.JstlView" />  
        <property name="prefix" value="/pages" />  
        <property name="suffix" value=".jsp" />  
    </bean> 
    
    <!-- RestTemplate config -->
    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate"/>
    
    <!-- redis config-->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.maxIdle}" />
        <property name="maxTotal" value="${redis.maxTotal}" />
        <property name="maxWaitMillis" value="${redis.maxWaitMillis}" />
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />
    </bean>

    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="poolConfig" ref="jedisPoolConfig" /> 
        <property name="hostName" value="${redis.host}" />
        <property name="port" value="${redis.port}" />
        <property name="timeout" value="${redis.timeout}" />
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory"   ref="connectionFactory" />
    </bean>
    
    <!-- 拦截器-->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/**/login"/>
            <bean class="com.mengma.mis.core.interceptor.MisInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>
    
    <!-- 静态资源访问   -->
    <mvc:default-servlet-handler/>
    <mvc:resources location="/img/" mapping="/img/**" />  
	<mvc:resources location="/css/" mapping="/css/**" />  
	<mvc:resources location="/js/" mapping="/js/**" />

    <!-- post 請求json轉換 -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter" />
            </list>
        </property>
    </bean>
    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
                <value>application/json;charset=utf-8</value>
            </list>
        </property>
    </bean>
    
 </beans>